# =============================================================
# PureBasic Sine Test MakefileMacOS
# =============================================================

EXE_NAME = SINE

# make sure these are in your path
#
CC          = clang
C++         = clang++
LD          = clang++

SRCDIR := .
DSTDIR := .

# settings
#
CFLAGS = -DPLATFORM_DARWIN \
	 -DCC_GNU_ \
	 -DOSMac_ \
	 -DOSMacOSX_ \
	 -DOSMac_MachO_ \
	 -D__MACOSX_CORE__\
	 -D__LITTLE_ENDIAN__\
	 -O3 \
	 -D_LANGUAGE_C_PLUS_PLUS\
	 -mmacosx-version-min=10.9\
	 -arch x86_64\
	 -fPIC\
	 -DNDEBUG\
	
C++FLAGS = $(CFLAGS) \
	   -std=c++11 \
	   -stdlib=libc++ \
	   -fno-gnu-keywords \
	   -fpascal-strings  \
	   -Wno-deprecated \
	   -Wpointer-arith \
	   -Wwrite-strings \
	   -Wno-long-long

# includes
#
STK_INCLUDES = ../../include
INCLUDES = -I$(STK_INCLUDES) -I$(SRCDIR)

# sources
#
STK_PATH = ../../src

LIBS += -lm 
LIBS += -framework CoreFoundation
LIBS += -framework AudioToolbox
LIBS += -framework AudioUnit
LIBS += -framework CoreAudio
LIBS += -framework CoreAudioKit
LIBS += -framework CoreMIDI
LIBS += -framework CoreMIDIServer


LIBS_PATH =

LDFLAGS += -Wl,-search_paths_first -Wl,-headerpad_max_install_names $(LIBS)

# deploy
#
DEST = /Users/benmalartre/Documents/RnD/STK/projects/tests

# variable definitions
#
SOURCES = $(STK_PATH)/Stk.cpp
SOURCES += $(STK_PATH)/FileRead.cpp
SOURCES += $(STK_PATH)/FileWrite.cpp
SOURCES += $(STK_PATH)/FileWvIn.cpp
SOURCES += $(STK_PATH)/FileLoop.cpp
SOURCES += $(STK_PATH)/FileWvOut.cpp

SOURCES += $(SRCDIR)/sine.cpp

OBJECTS  := $(patsubst %.cpp,$(DSTDIR)/%.o,$(SOURCES))

EXE := $(EXE_NAME)
MAKEFILE := $(SRCDIR)/MakefileMacOS

# target specific flags.
#
$(OBJECTS): CFLAGS   := $(CFLAGS)
$(OBJECTS): C++FLAGS := $(C++FLAGS)
$(OBJECTS): INCLUDES := $(INCLUDES) -I/usr/X11R6/include 

DEPENDS:     INCLUDES := $(INCLUDES)


# rules definitions
#
.PHONY:	all depend clean

all:
	+@$(MAKE) -f $(MAKEFILE) $(EXE)

%.o :	%.c
	$(CC) -c $(INCLUDES) $(CFLAGS) $< -o $@

%.o :	%.cpp
	@echo INCLUDES : $(INCLUDES)
	@echo "Compiling $< ..."
	$(C++) -c $(INCLUDES) $(C++FLAGS) $< -o $@

%.i :	%.cpp
	$(C++) -E $(INCLUDES) $(C++FLAGS) $*.cpp > $*.i

$(EXE): $(OBJECTS)
	$(LD) -o $@ $(LDFLAGS) $^ $(LIBS)

depend:
	makedepend $(INCLUDES) $(MDFLAGS) -f$(MAKEFILE) $(SOURCES)

clean:
	rm -rf *.o *.gah *.so $(STK_PATH)/*.o